import Web3, { Web3PluginBase, eth, utils } from "web3";

export class EthCC extends Web3PluginBase {
  //1.  Add name
  pluginNamespace = "ethcc";

  //2. Add methods
  async nitroGenesisBlock() {
    const response = await this.requestManager.send({
      method: "eth_call",
      params: [
        {
          to: "0x00000000000000000000000000000000000000c8",
          data: eth.abi.encodeFunctionSignature("nitroGenesisBlock()"),
        },
      ],
    });
    return utils.toBigInt(response);
  }

  async blockL1Num() {
    const response = await this.requestManager.send({
      method: "eth_call",
      params: [
        {
          to: "0x00000000000000000000000000000000000000c8",
          data: eth.abi.encodeFunctionCall(
            {
              name: "blockL1Num",
              type: "function",
              inputs: [
                {
                  type: "uint64",
                  name: "l2BlockNum",
                },
              ],
            },
            ["224537442"]
          ),
        },
      ],
    });
    return utils.toBigInt(response);
  }
}

//20147329
//20147414n
